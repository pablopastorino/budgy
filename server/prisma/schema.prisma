generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique(map: "name") @db.VarChar(45)
  isEarning Boolean   @map("is_earning")
  Concept   Concept[]

  @@map("categories")
}

model Concept {
  id           Int           @id @default(autoincrement())
  name         String        @unique(map: "name") @db.VarChar(45)
  categoryId   Int           @map("categories_id")
  categories   Category      @relation(fields: [categoryId], references: [id], onDelete: NoAction, map: "fk_concepts_categories1")
  transactions Transaction[]

  @@index([categoryId], map: "fk_concepts_categories1_idx")
  @@map("concepts")
}

model Transaction {
  id               Int       @id @default(autoincrement())
  ammount          Decimal   @db.Decimal(10, 0)
  transactionDate  DateTime? @default(now()) @map("transaction_date") @db.DateTime(0)
  registraton_date DateTime? @default(now()) @db.DateTime(0)
  score            String?   @db.VarChar(45)
  userId           Int       @map("users_id")
  conceptId        Int       @map("concepts_id")
  concepts         Concept   @relation(fields: [conceptId], references: [id], onDelete: NoAction, map: "fk_transactions_concepts1")
  User             User      @relation(fields: [userId], references: [id], onDelete: Cascade, map: "fk_transactions_users1")

  @@index([conceptId], map: "fk_transactions_concepts1_idx")
  @@index([userId], map: "fk_transactions_users1_idx")
  @@map("transactions")
}

model User {
  id               Int           @id @default(autoincrement())
  firstName        String        @map("first_name") @db.VarChar(45)
  lastName         String        @map("last_name") @db.VarChar(45)
  email            String        @unique(map: "email") @db.VarChar(255)
  password         String        @db.VarChar(255)
  registrationDate DateTime      @map("registration_date") @db.DateTime(0)
  transactions     Transaction[]

  @@map("users")
}
